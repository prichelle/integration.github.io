swagger: '2.0'
info:
  title: ratelimitsample
  x-ibm-name: ratelimitsample
  version: 1.0.0
schemes:
  - https
basePath: /ratelimit
security:
  - clientID: []
securityDefinitions:
  clientID:
    type: apiKey
    in: header
    name: X-IBM-Client-Id
x-ibm-configuration:
  cors:
    enabled: true
  gateway: datapower-api-gateway
  type: rest
  phase: realized
  enforced: true
  testable: true
  assembly:
    execute:
      - operation-switch:
          version: 2.0.0
          title: operation-switch
          case:
            - operations:
                - verb: get
                  path: /echo
              execute:
                - gatewayscript:
                    version: 2.0.0
                    title: gatewayscript
                    source: 'context.set(''weight'',1);'
                - ratelimit:
                    version: 2.2.0
                    title: cl_increase
                    source: plan-named
                    count-limit:
                      - name: countlimit
                        operation: inc
                - gatewayscript:
                    version: 2.0.0
                    title: gatewayscript
                    source: |-
                      var response = {"echo":"success"};
                      response.attributes = context.get('message.attributes');
                      context.message.body.write(JSON.stringify(response));
            - operations:
                - verb: post
                  path: /echo
              execute:
                - parse:
                    version: 2.0.0
                    title: parse
                    parse-settings-reference:
                      default: apic-default-parsesettings
                - ratelimit:
                    version: 2.2.0
                    title: rl_payload
                    source: plan-named
                    rate-limit:
                      - name: payloadsize
                        operation: consume
                    count-limit: []
                - gatewayscript:
                    version: 2.0.0
                    title: gatewayscript
                    source: |-
                      var response = {"echo":"success"};
                      response.attributes = context.get('message.attributes');
                      context.message.body.write(JSON.stringify(response));
            - operations:
                - verb: post
                  path: /reset
              execute:
                - gatewayscript:
                    version: 2.0.0
                    title: setweight
                    source: |+

                      context.request.body.readAsJSON(function(error, json) {
                       context.set('weight', parseInt(json.weight));   
                          console.error('****: ' + json);
                      });


                - ratelimit:
                    version: 2.2.0
                    title: cl_decrease
                    source: plan-named
                    count-limit:
                      - name: countlimit
                        operation: dec
                    description: ''
                - gatewayscript:
                    version: 2.0.0
                    title: gatewayscript
                    source: |-
                      var response = {"echo":"decreased by weight"};
                      context.message.body.write(JSON.stringify(response));
          otherwise: []
    catch:
      - errors:
          - RuntimeError
        execute:
          - gatewayscript:
              version: 2.0.0
              title: gatewayscript
              source: |-
                var response = {"error":"runtime"};
                console.error(context.get('jwt-validate.error-message'));
                context.message.body.write(JSON.stringify(response));
          - switch:
              version: 2.0.0
              title: switch
              case:
                - condition: ($length(jwt-validate.error-message)>0)
                  execute:
                    - gatewayscript:
                        version: 2.0.0
                        title: gatewayscript
                        source: |-
                          var response = {"error":"jwt"};
                          context.message.body.write(JSON.stringify(response));
      - errors:
          - AssemblyRateLimitError
        execute:
          - gatewayscript:
              version: 2.0.0
              title: gatewayscript
              source: |-
                var response = {"error":"maximum rate limit reached"};

                context.message.body.write(JSON.stringify(response));
      - default:
          - gatewayscript:
              version: 2.0.0
              title: gatewayscript
              source: |-
                var response = {"error":"def"};

                context.message.body.write(JSON.stringify(response));
  properties:
    target-url:
      value: 'http://example.com/operation-name'
      description: The URL of the target service
      encoded: false
  application-authentication:
    certificate: false
  activity-log:
    enabled: true
    error-content: header
    success-content: activity
definitions:
  reset:
    type: object
    additionalProperties: false
    properties:
      weight:
        type: string
        description: weight value
        example: '2'
paths:
  /reset:
    post:
      responses:
        '200':
          description: success
          schema:
            type: string
      parameters:
        - name: reset body
          in: body
          required: false
          schema:
            $ref: '#/definitions/reset'
      consumes: []
      produces: []
    parameters: []
  /echo:
    get:
      responses:
        '200':
          description: success
          schema:
            type: string
      consumes: []
      produces: []
      security:
        - clientID: []
    post:
      responses:
        '200':
          description: success
          schema:
            type: string
      parameters:
        - name: body
          in: body
          required: false
          schema:
            type: object
      consumes: []
      produces: []
    parameters: []

